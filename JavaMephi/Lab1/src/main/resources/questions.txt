+1) Class Path - ?
Classpath — это просто набор путей, по которым компилятор Java и JVM должны находить необходимые классы для компиляции или выполнения других классов.
+2) ArrayList как устроен
Внутри структуры данных — массив фиксированного размера, который удаляется и создается заново с новой длиной, когда внутри ArrayList меняется количество объектов. Технически это выглядит так:

разработчик отдает команду записать новый элемент;
внутри ArrayList создается копия текущего массива, который там хранится, но с большей длиной;
в нужное место расширенной копии добавляется новый элемент;
старый массив удаляется.
Чтобы оптимизировать этот процесс, новая длина по умолчанию в полтора раза больше старой — так массив не приходится «переписывать» слишком часто.

+3) Как по особому хранятся строки в памяти

+4) StringBuilder как устроен, отличие от StringBuffer
Разница лишь в том, что StringBuffer потокобезопасен, и все его методы синхронизированы,
а StringBuilder — нет. Это единственная особенность. StringBuilder в Java работает быстрее
StringBuffer’а благодаря несинхронизированности методов. Поэтому в большинстве случаев,
кроме многопоточной среды, лучше использовать для программы на Java StringBuilder.

StringBuffer – это аналог класса StringBuilder, только его методы
объявлены как synchronized. А значит, перед каждым вызовом такого метода Java-машина проверяет,
занят ли объект, и если нет — помечает его как занятый. После выхода из метода – «освобождает»
объект. Из-за этого такие вызовы работают медленнее. Не стоит без необходимости пользоваться StringBuffer.



+5) Во сколько раз выгоднее стрингбилдер при конкатенации строк n по m
При каждой конкатенации создается новая копия строки, так что общая сложность составляет O(n^2). К счастью,
в Java мы могли бы решить эту проблему с помощью StringBuffer, которая имеет O(1) сложность для каждого добавления,
тогда общая сложность была бы O(n).


+6) Что плохого произойдет если использовать билдер в многопоточке
Если несколько потоков модифицируют один и тот же экземпляр a StringBuilder, результат может быть неожиданным,
т. Е. Некоторые модификации могут быть потеряны. Вот почему в таких ситуациях следует использовать StringBuffer .
Однако, если каждый StringBuilder экземпляр потока может быть изменен только одним потоком, лучше использовать
StringBuilder, поскольку это было бы более эффективно (потокобезопасность сопряжена с затратами на производительность).




+1) Декомпозиция по третьему заданию и добавить метод которые принимает неограниченное количество аргументов
+2) Принимает длину и генерит строчку заданной длины в 10
+3) Поступает массив, найти 2 максимальных элемента
